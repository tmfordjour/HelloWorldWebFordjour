// <auto-generated />
using HelloWorldWebFordjour.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelloWorldWebFordjour.Migrations
{
    [DbContext(typeof(TicketsDbContext))]
    [Migration("20250715103259_AddTicketsTable")]
    partial class AddTicketsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HelloWorldWebFordjour.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<int>("SprintNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Add ability to save and view favorite countries.",
                            Name = "Implement Favorites Feature",
                            PointValue = 8,
                            SprintNumber = 1,
                            Status = 3
                        },
                        new
                        {
                            Id = 2,
                            Description = "Develop ticket creation, viewing, and editing.",
                            Name = "Create ToDo List Module",
                            PointValue = 10,
                            SprintNumber = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Create a welcoming home page for the Olympics site.",
                            Name = "Design Landing Page",
                            PointValue = 5,
                            SprintNumber = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Adjust CSS for consistent footer positioning.",
                            Name = "Fix Footer Alignment",
                            PointValue = 2,
                            SprintNumber = 1,
                            Status = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
